import { ListView, ComboBox, LineEdit, Button, CheckBox } from "std-widgets.slint";
import { Table, TableRow, TableCell } from "table.slint";

export struct TxView := {
    id: int,
    timestamp: string,
    account: string,
    payee: string,
    category: string,
    memo: string,
    inflow: string,
    outflow: string,
    cleared: bool,
}

export Transactions := Rectangle {
    property<[TxView]> transactions: [];
    property<int> selected-account: -1;
    property<[string]> account-names: [];
    property<[string]> categories: [];
    property<bool> adding-tx;

    callback select-account(int);
    callback add-tx(string, string, string, string, float);

    select-account(account-id) => {
        table.viewport-y = 0;
        selected-account = account-id;
    }

    min-width: 60px;
    min-height: 60px;
    vertical-stretch: 1;

    VerticalLayout {
        padding: 12px;
        
        HorizontalLayout {
            alignment: start;
            Button {
                height: 20px;
                text: "Add Transaction";
                clicked => {
                    adding-tx = true;
                }
            }
        }

        table := Table {
            column-names: { 
                if (selected-account < 0) {
                    ["DATE", "ACCOUNT", "PAYEE", "CATEGORY", "MEMO", "OUTFLOW", "INFLOW", ""]
                } else {
                    ["DATE", "PAYEE", "CATEGORY", "MEMO", "OUTFLOW", "INFLOW", ""]
                }
            }
            column-widths: { 
                if (selected-account < 0) {
                    [5, 5, 5, 5, 5, 5, 5, 1]
                } else {
                    [5, 5, 5, 5, 5, 5, 1]
                }
            }

            if (adding-tx): adding-row := Rectangle {
                property<string> account-name;
                
                background: #d8e9f6;

                VerticalLayout {
                    TableRow {
                        background: transparent;

                        TableCell {
                            input: true;
                            placeholder-text: "date";
                            horizontal-stretch: 5;
                        }

                        if (selected-account < 0): TableCell {
                            text <=> adding-row.account-name;
                            combo: true;
                            model: account-names;
                            placeholder-text: "account";
                            horizontal-stretch: 5;
                        }
                        payee := TableCell {
                            input: true;
                            placeholder-text: "payee";
                            horizontal-stretch: 5;
                        }
                        category := TableCell {
                            combo: true;
                            model: categories;
                            placeholder-text: "category";
                            horizontal-stretch: 5;
                        }
                        memo := TableCell {
                            input: true;
                            placeholder-text: "memo";
                            horizontal-stretch: 5;
                        }
                        outflow := TableCell {
                            input: true;
                            placeholder-text: "outflow";
                            horizontal-stretch: 5;
                        }
                        inflow := TableCell {
                            input: true;
                            placeholder-text: "inflow";
                            horizontal-stretch: 5;
                        }
                        TableCell {
                            horizontal-stretch: 1;
                            Image {
                                width: 12px;
                                height: 12px;
                                x: 6px; y: 8px;
                                source: @image-url("./cleared_symbol_small.png");
                            }
                        }
                    }
                    HorizontalLayout {
                        alignment: end;
                        padding: 6px;
                        spacing: 6px;
                        Button {
                            text: "Cancel";
                            height: 24px;
                            clicked => {
                                adding-tx = false;
                                payee.text = "";
                                category.text = "";
                                memo.text = "";
                                outflow.text = "";
                                inflow.text = "";
                            }
                        }
                        Button {
                            text: "Save";
                            height: 24px;
                            clicked => {
                                root.add-tx(
                                    selected-account < 0 ? account-name : account-names[selected-account - 1],
                                    payee.text,
                                    category.text,
                                    memo.text,
                                    (inflow.text.to-float() - outflow.text.to-float()) * 100);
                                adding-tx = false;
                                payee.text = "";
                                category.text = "";
                                memo.text = "";
                                outflow.text = "";
                                inflow.text = "";
                            }
                        }
                    }
                }
            }

            row-count: transactions.length;
            for data[index] in transactions: TableRow {
                n: index;
                TableCell {
                    text: data.timestamp;
                    horizontal-stretch: 5;
                }
                if selected-account < 0: TableCell {
                    text: data.account;
                    horizontal-stretch: 5;
                }
                TableCell {
                    text: data.payee;
                    horizontal-stretch: 5;
                }
                TableCell {
                    text: data.category;
                    horizontal-stretch: 5;
                }
                TableCell {
                    text: data.memo;
                    horizontal-stretch: 5;
                }
                TableCell {
                    text: data.outflow;
                    horizontal-stretch: 5;
                }
                TableCell {
                    text: data.inflow;
                    horizontal-stretch: 5;
                }
                TableCell {
                    horizontal-stretch: 1;
                    Image {
                        width: 12px;
                        height: 12px;
                        x: 7px; y: 9px;
                        source: {
                            if (data.cleared) {
                                @image-url("./cleared_on_small.png")
                            } else {
                                @image-url("./cleared_off_small.png")
                            }
                        }
                    }
                }
            }
        }
    }
}